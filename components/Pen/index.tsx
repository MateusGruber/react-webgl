/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, PerspectiveCamera, useAnimations } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    tip: THREE.Mesh
    Cubo: THREE.Mesh
    grafitti: THREE.Mesh
    button: THREE.Mesh
    clipping: THREE.Mesh
    body: THREE.Mesh
  }
  materials: {
    metal: THREE.MeshStandardMaterial
    ['Materiais.003']: THREE.MeshStandardMaterial
    grafitti: THREE.MeshStandardMaterial
    plastic: THREE.MeshStandardMaterial
  }
}

type ActionName =
  | 'bodyAction'
  | 'buttonAction'
  | 'tipAction'
  | 'grafittiAction'
  | 'clippingAction'
  | 'CuboAction'
  | 'Spot.001Action'
  | 'AreaAction'
  | 'Area.001Action'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/pen-draco.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Spot" position={[0, 18, 18]} rotation={[0.79, 0, 0]}>
        <spotLight
          intensity={7}
          angle={0.17}
          penumbra={0.15}
          decay={2}
          distance={69.55}
          rotation={[-Math.PI / 2, 0, 0]}
        />
      </group>
        <rectAreaLight
          intensity={3}
          name="Area"
          angle={0.17}
          penumbra={0.15}
          decay={2}
          position={[0, 18, 31]}
          rotation={[1.04, 0, 0]}
          width={4.44}
          height={4.44}
        />
        <rectAreaLight
          width={15.09}
          height={15.09}
          intensity={10}
          position={[-2, 0, 5]}
          lookAt={[0, 0, 0]}
          penumbra={1}
          castShadow
        />
      {/* <spotLight
        intensity={3}
        name="DownArea"

        angle={0.17}
        penumbra={0.15}
        decay={2}
        position={[0, -3, 12]}
        rotation={[1.82, 0, 0]}
        scale={[15.09, 15.09, 15.09]} 
      />*/}
      <mesh
        name="tip"
        castShadow
        receiveShadow
        geometry={nodes.tip.geometry}
        material={materials.metal}
        rotation={[0, 0, -Math.PI / 4]}
        scale={[-0.21, -0.21, -0.21]}
      />
      <mesh
        name="Cubo"
        castShadow
        receiveShadow
        geometry={nodes.Cubo.geometry}
        material={materials['Materiais.003']}
        position={[0, 0, 6]}
        scale={[9.9, 9.9, 9.9]}
      />
      <mesh
        name="grafitti"
        castShadow
        receiveShadow
        geometry={nodes.grafitti.geometry}
        material={materials.grafitti}
        rotation={[0, 0, -Math.PI / 4]}
        scale={[-0.21, -0.21, -0.21]}
      />
      <mesh
        name="button"
        castShadow
        receiveShadow
        geometry={nodes.button.geometry}
        material={materials.metal}
        rotation={[0, 0, -Math.PI / 4]}
        scale={[-0.21, -0.21, -0.21]}
      />
      <mesh
        name="clipping"
        castShadow
        receiveShadow
        geometry={nodes.clipping.geometry}
        material={materials.metal}
        rotation={[0, 0, -Math.PI / 4]}
        scale={[-0.21, -0.21, -0.21]}
      />
      <mesh
        name="body"
        castShadow
        receiveShadow
        geometry={nodes.body.geometry}
        material={materials.plastic}
        rotation={[0, 0, -Math.PI / 4]}
        scale={[-0.21, -0.21, -0.21]}
      />
    </group>
  )
}

useGLTF.preload('/pen-draco.glb')
